// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  email      String       @unique
  name       String       @unique
  role       Role         @default(USER)
  attendance Attendance[]
  report     Report[]
}

model Log {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  date              DateTime    @default(now())
  image             String
  latitude          Float
  longitude         Float
  attendanceStartId String?     @db.ObjectId
  attendanceStart   Attendance? @relation(name: "attendanceStartLog", fields: [attendanceStartId], references: [id])
  attendanceEndId   String?     @db.ObjectId
  attendanceEnd     Attendance? @relation(name: "attendanceEndLog", fields: [attendanceEndId], references: [id])

  @@unique([attendanceStartId, attendanceEndId])
}

model Attendance {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  date     DateTime @default(now())
  user     User?    @relation(fields: [userId], references: [id])
  userId   String?  @db.ObjectId
  startLog Log[]    @relation("attendanceStartLog")
  endLog   Log[]    @relation("attendanceEndLog")
}

model Report {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @map("_userId") @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  date        DateTime @default(now())
  status      Status   @default(WAITING)
  description String?
  images      String[]
}

enum Role {
  USER
  ADMIN
}

enum Status {
  WAITING
  REJECTED
  ACCEPTED
}
